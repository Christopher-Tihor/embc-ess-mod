kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: mygovbc-captcha-service deployment config template

parameters:
  - description: openshift namespace prefix
    name: NAMESPACE_PREFIX
    required: true
  - description: openshift namespace env name
    name: ENV
    required: true
  - description: app name
    name: APP_NAME
    required: true
  - description: image tag for deployments
    name: TAG
    required: true
  - description: captcha secret
    name: SECRET
    required: true
  - description: captcha private key
    name: PRIVATE_KEY
    required: true
  - description: captcha CORS settings
    name: CORS_ALLOW_ALL
    required: false
    value: "false"

objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-mygovbc-captcha-service-config
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
    data:
      NODE_ENV: "production"
      CORS_ALLOW_ALL: "${CORS_ALLOW_ALL}"
      AUTHORIZED_RESOURCE_SERVER_IP_RANGE_LIST: "0.0.0.0/0"
      LOG_LEVEL: "info"

  - kind: Secret
    apiVersion: v1
    type: Opaque
    metadata:
      name: ${APP_NAME}-mygovbc-captcha-service-secrets
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
    stringData:
      SECRET: "${SECRET}"
      PRIVATE_KEY: "${PRIVATE_KEY}"

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
      name: ${APP_NAME}-mygovbc-captcha-service
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${APP_NAME}-mygovbc-captcha-service
      type: ClusterIP

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
      annotations:
        haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
        haproxy.router.openshift.io/balance: leastconn
      name: ${APP_NAME}-mygovbc-captcha-service
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      host: ${APP_NAME}-era-captcha.apps.silver.devops.gov.bc.ca
      path: /
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-mygovbc-captcha-service
        weight: 100

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${APP_NAME}-mygovbc-captcha-service
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      podSelector:
        matchLabels:
          app: ${APP_NAME}-mygovbc-captcha-service
      ingress:
        - ports:
            - protocol: TCP
              port: 8080

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
      name: ${APP_NAME}-mygovbc-captcha-service
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      replicas: 2
      revisionHistoryLimit: 2
      selector:
        deploymentconfig: ${APP_NAME}-mygovbc-captcha-service
      strategy:
        resources:
          limits:
            cpu: 15m
            memory: 64Mi
          requests:
            cpu: 5m
            memory: 32Mi
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}-mygovbc-captcha-service
            deploymentconfig: ${APP_NAME}-mygovbc-captcha-service
        spec:
          containers:
            - name: mygovbc-captcha-service
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}-mygovbc-captcha-service-config
                - secretRef:
                    name: ${APP_NAME}-mygovbc-captcha-service-secrets
              resources:
                limits:
                  cpu: 50m
                  memory: 256Mi
                requests:
                  cpu: 10m
                  memory: 128Mi
              image: docker-registry.default.svc:5000/${NAMESPACE_PREFIX}-tools/mygovbc-captcha-service:${TAG}
              imagePullPolicy: Always
              ports:
                - containerPort: 8080
                  protocol: TCP
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              livenessProbe:
                httpGet:
                  path: /status
                  port: 8080
                  scheme: HTTP
                timeoutSeconds: 1
                periodSeconds: 60
                successThreshold: 1
                failureThreshold: 5
              startupProbe:
                httpGet:
                  path: /status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 60
                timeoutSeconds: 5
                periodSeconds: 15
                successThreshold: 1
                failureThreshold: 5
              readinessProbe:
                httpGet:
                  path: /status
                  port: 8080
                  scheme: HTTP
                timeoutSeconds: 5
                periodSeconds: 60
                successThreshold: 1
                failureThreshold: 5
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mygovbc-captcha-service
            from:
              kind: ImageStreamTag
              name: mygovbc-captcha-service:${TAG}
              namespace: ${NAMESPACE_PREFIX}-tools

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v2beta2
    metadata:
      name: ${APP_NAME}-mygovbc-captcha-service-has
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-mygovbc-captcha-service
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${APP_NAME}-mygovbc-captcha-service
        apiVersion: apps.openshift.io/v1
      minReplicas: 3
      maxReplicas: 6
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 150
        - type: Resource
          resource:
            name: memory
            target:
              type: Utilization
              averageUtilization: 125
