kind: Template
apiVersion: v1
metadata:
  name: responders-portal-template

parameters:
  - description: openshift namespace prefix
    name: NAMESPACE_PREFIX
    required: true
  - description: openshift namespace env name
    name: ENV
    required: true
  - description: app name
    name: APP_NAME
    required: true
  - description: image tag for deployments
    name: TAG
    required: true
  - description: Reverse proxy known network
    name: KNOWN_NETWORKS
    value: ::ffff:172.51.0.0/16
  - description: ASPNET runtime environment (Development/Staging/Production)
    name: RUNTIME_ENVIRONMENT
    value: Staging
  - description: ESS backend url
    name: BACKEND_URL
    required: true

objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APP_NAME}-responders-api-config
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-responders-portal
    data:     
      ASPNETCORE_ENVIRONMENT: ${RUNTIME_ENVIRONMENT}
      KEY_RING_PATH: "/dpkeys"
      BACKEND__URL: ${BACKEND_URL}

  - kind: Secret
    apiVersion: v1
    type: Opaque
    metadata:
      name: ${APP_NAME}-responders-api-secrets
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-responders-portal
    stringData:

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP_NAME}-responders-portal
      name: ${APP_NAME}-responders-portal-api
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: ${APP_NAME}-responders-portal-api
      type: ClusterIP

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: ${APP_NAME}-responders-portal
      name: ${APP_NAME}-responders-portal-ui
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      ports:
        - name: 2015-tcp
          port: 2015
          protocol: TCP
          targetPort: 2015
      selector:
        deploymentconfig: ${APP_NAME}-responders-portal-ui
      type: ClusterIP

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-responders-portal
      name: ${APP_NAME}-responders-portal-api
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      host: ${APP_NAME}-embc-responders.pathfinder.gov.bc.ca
      path: /api
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-responders-portal-api
        weight: 100
      wildcardPolicy: None

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-responders-portal
      name: ${APP_NAME}-responders-portal-ui
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      host: ${APP_NAME}-embc-responders.pathfinder.gov.bc.ca
      path: /
      port:
        targetPort: 2015-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${APP_NAME}-responders-portal-ui
        weight: 100

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-responders-portal
      name: ${APP_NAME}-responders-portal-api
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      replicas: 2
      selector:
        app: ${APP_NAME}-responders-portal
        deploymentconfig: ${APP_NAME}-responders-portal-api
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}-responders-portal
            deploymentconfig: ${APP_NAME}-responders-portal-api
        spec:
          containers:
            - name: responders-portal-api
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}-responders-api-config
                - secretRef:
                    name: ${APP_NAME}-responders-api-secrets
              image: docker-registry.default.svc:5000/${NAMESPACE_PREFIX}-tools/responders-portal-api:${TAG}
              imagePullPolicy: Always
              volumeMounts:
                - mountPath: /dpkeys
                  name: dp-keys
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: dp-keys
              persistentVolumeClaim:
                claimName: ${APP_NAME}-responders-key-ring
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - responders-portal-api
            from:
              kind: ImageStreamTag
              name: responders-portal-api:${TAG}
              namespace: ${NAMESPACE_PREFIX}-tools

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      labels:
        app: ${APP_NAME}-responders-portal
      name: ${APP_NAME}-responders-portal-ui
      namespace: ${NAMESPACE_PREFIX}-${ENV}
    spec:
      replicas: 2
      selector:
        app: ${APP_NAME}-responders-portal
        deploymentconfig: ${APP_NAME}-responders-portal-ui
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}-responders-portal
            deploymentconfig: ${APP_NAME}-responders-portal-ui
        spec:
          containers:
            - name: responders-portal-ui
              image: docker-registry.default.svc:5000/${NAMESPACE_PREFIX}-tools/responders-portal-ui:${TAG}
              imagePullPolicy: Always
              ports:
                - containerPort: 2015
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - responders-portal-ui
            from:
              kind: ImageStreamTag
              name: responders-portal-ui:${TAG}
              namespace: ${NAMESPACE_PREFIX}-tools

  - kind: "PersistentVolumeClaim"
    apiVersion: "v1"
    metadata:
      name: ${APP_NAME}-responders-key-ring
      namespace: ${NAMESPACE_PREFIX}-${ENV}
      labels:
        app: ${APP_NAME}-responders-portal
    spec:
      accessModes:
        - "ReadWriteMany"
      resources:
        requests:
          storage: "100Mi"
